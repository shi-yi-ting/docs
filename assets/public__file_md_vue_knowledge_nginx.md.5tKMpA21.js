import{_ as n,c as a,o as i,U as l}from"./chunks/framework.zpeVKxWT.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"public/_file/md/vue/knowledge/nginx.md","filePath":"public/_file/md/vue/knowledge/nginx.md"}'),e={name:"public/_file/md/vue/knowledge/nginx.md"},r=l('<h2 id="nginx" tabindex="-1">Nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;Nginx&quot;">​</a></h2><p><strong>Nginx学习</strong><a href="https://www.cnblogs.com/zhuminghui/p/11416672.html" target="_blank" rel="noreferrer">(参考链接)</a></p><p><strong>下载nginx包、解压、进入</strong><a href="https://nginx.org/download/nginx-1.10.1.tar.gz()" target="_blank" rel="noreferrer">(参考链接)</a></p><p><strong>nginx常用命令</strong><a href="https://www.cnblogs.com/ouyy/p/9106527.html" target="_blank" rel="noreferrer">(参考链接)</a></p><h3 id="nginx的使用" tabindex="-1">Nginx的使用 <a class="header-anchor" href="#nginx的使用" aria-label="Permalink to &quot;Nginx的使用&quot;">​</a></h3><h4 id="压缩备份" tabindex="-1">压缩备份 <a class="header-anchor" href="#压缩备份" aria-label="Permalink to &quot;压缩备份&quot;">​</a></h4><ol><li>cd 到目标文件夹</li><li>zip 打包后的名称 文件夹(源) 如：zip tagServe /usr/local/nginx/html/tagServe</li><li>ll (显示当前路径的文件)</li><li>pwd(查看当前处于哪个文件夹)</li></ol><h3 id="解压" tabindex="-1">解压 <a class="header-anchor" href="#解压" aria-label="Permalink to &quot;解压&quot;">​</a></h3><ol><li>cd 到文件所在的文件夹</li><li>unzip 路径/文件名.zip</li></ol><h3 id="移动单个文件" tabindex="-1">移动单个文件 <a class="header-anchor" href="#移动单个文件" aria-label="Permalink to &quot;移动单个文件&quot;">​</a></h3><ol><li>cd 到文件所在位置</li><li>mv * ../tagServeBackup (按Tab键可自动补全，星号表示当前文件夹的所有文件)</li><li>使用移动进行备份的时候在存放项目文件夹的同级文件处新建一个备份文件夹，备份文件夹存放项目文件夹，备份的项目文件夹最好带上日期</li></ol><h3 id="删除文件" tabindex="-1">删除文件 <a class="header-anchor" href="#删除文件" aria-label="Permalink to &quot;删除文件&quot;">​</a></h3><ol><li>rm tagServe.zip</li><li>rm *</li><li>删除的时候会有一个提示 remove regular file &#39;tagServe.zip&#39;? yes然后回车</li></ol><h3 id="两种启动nginx的方式" tabindex="-1">两种启动Nginx的方式 <a class="header-anchor" href="#两种启动nginx的方式" aria-label="Permalink to &quot;两种启动Nginx的方式&quot;">​</a></h3><ol><li>左边文件夹找到并定位到 /usr/loacal/nginx/sbin/ 右边 cd 复制上面定位到的文件夹粘贴 执行 ./nginx -s reload 重新加载nginx(重启)</li><li>直接右边执行 whereis nginx 回车 回车之后将直接会显示 nginx: /usr/local/nginx 复制 cd /usr/local/nginx cd sbin ./nginx -s reload 回车</li></ol><h3 id="查看nginx错误日志" tabindex="-1">查看nginx错误日志 <a class="header-anchor" href="#查看nginx错误日志" aria-label="Permalink to &quot;查看nginx错误日志&quot;">​</a></h3><p>ps -ef|grep nginx (停用) vim /usr/local/nginx/conf/nginx.conf (重启) cd /data/logs 或者 cd /usr/local/nginx/logs/ ll /tailf error.log</p><h3 id="nginx配置文件的位置" tabindex="-1">nginx配置文件的位置 <a class="header-anchor" href="#nginx配置文件的位置" aria-label="Permalink to &quot;nginx配置文件的位置&quot;">​</a></h3><p>/usr/local/nginx/conf/文件夹中的 nginx.conf 在配置文件当中可以查看错误日志在那个文件夹中</p><h3 id="linux命令" tabindex="-1">linux命令 <a class="header-anchor" href="#linux命令" aria-label="Permalink to &quot;linux命令&quot;">​</a></h3><ol><li>ipConfig // 查看ip</li><li>ping 域名 // 查看域名有没有通</li><li>pwd // 查看文件夹</li><li>scp -r agent 10.243.189.86:/data01/software // 复制data01/software文件夹中的agent复制到10.243.189.86 ip中的/data01/software文件夹中</li><li>shift + inSert // 粘贴</li><li>chown -R nginx: agent 或者 chown nginx:nginx -R agent</li></ol>',21),o=[r];function t(g,s,h,c,d,x){return i(),a("div",null,o)}const f=n(e,[["render",t]]);export{p as __pageData,f as default};
