import{_ as n,c as s,o as a,U as p}from"./chunks/framework.FpOEJISx.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"public/static/_file/md/enclosure/i18n.md","filePath":"public/static/_file/md/enclosure/i18n.md"}'),e={name:"public/static/_file/md/enclosure/i18n.md"},l=p(`<h2 id="vue-i18n" tabindex="-1">vue-i18n <a class="header-anchor" href="#vue-i18n" aria-label="Permalink to &quot;vue-i18n&quot;">​</a></h2><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>npm install vue-i18n</span></span></code></pre></div><h3 id="使用前处理" tabindex="-1">使用前处理 <a class="header-anchor" href="#使用前处理" aria-label="Permalink to &quot;使用前处理&quot;">​</a></h3><p>在src文件夹中新建 i18n 文件夹，里面新建 lang文件夹，新建 index.js文件；在lang文件夹中放入语言模块必读 cn.js，en.js</p><h4 id="index-js" tabindex="-1">index.js <a class="header-anchor" href="#index-js" aria-label="Permalink to &quot;index.js&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import Vue from &#39;vue&#39;</span></span>
<span class="line"><span>import VueI18n from &#39;vue-i18n&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// import cn from &#39;./lang/cn&#39;</span></span>
<span class="line"><span>// import en from &#39;./lang/en&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Vue.use(VueI18n) // 通过插件的形式挂载</span></span>
<span class="line"><span></span></span>
<span class="line"><span>function loadLocaleMessages() {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // require.context函数接受三个参数：</span></span>
<span class="line"><span>    // directory {String} -读取文件的路径</span></span>
<span class="line"><span>    // useSubdirectories {Boolean} -是否遍历文件的子目录</span></span>
<span class="line"><span>    // regExp {RegExp} -匹配文件的正则</span></span>
<span class="line"><span>    // 在前端工程中,如果遇到从一个文件夹引入很多模块的情况,可以使用这个api,它会遍历文件夹中的指定文件,然后自动导入,使得不需要每次显式的调用import导入模块</span></span>
<span class="line"><span>    // 找到当前文件夹中的lang文件夹中的所有 .js 文件</span></span>
<span class="line"><span>    const locales = require.context(&#39;./lang&#39;, true, /[A-Za-z0-9-_,\\s]+\\.js$/i) // 返回的是一个函数,并且这个函数有3个属性</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    console.log(&#39;require.context函数执行后返回的是一个函数,并且这个函数有3个属性: &#39;)</span></span>
<span class="line"><span>    console.dir(locales)</span></span>
<span class="line"><span>    console.log(&#39;第一个属性keys:&#39;, locales.keys()) // keys {Function} -返回匹配成功(根据上面的匹配规则匹配)模块的名字组成的数组[&#39;./cn.js&#39;, &#39;./en.js&#39;]</span></span>
<span class="line"><span>    console.log(&#39;第二个属性id:&#39;, locales.id) // 返回的是一个字符串   ./src/i18n/lang sync recursive [A-Za-z0-9-_,\\s]+\\.js$/</span></span>
<span class="line"><span>    console.log(&#39;第三个属性resolve:&#39;, locales.resolve(locales.keys()[0])) // 返回这个匹配文件相对于整个工程的相对路径  ./src/i18n/lang/cn.js</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    const messages = {}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    locales.keys().forEach((key) =&gt; {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // match正则匹配方法(是字符串方法: str.match(reg)),匹配成功返回数组，否则返回null</span></span>
<span class="line"><span>        const matched = key.match(/([A-Za-z0-9-_]+)\\./i)</span></span>
<span class="line"><span>        console.log(&#39;key&#39;, key)</span></span>
<span class="line"><span>        console.log(&#39;matched&#39;, matched)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        if (matched &amp;&amp; matched.length &gt; 1) { // matched的长度为啥是2 (而且值是一样的)???</span></span>
<span class="line"><span>            const locale = matched[1]</span></span>
<span class="line"><span>            console.log(&#39;locale&#39;, locale)</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>            messages[locale] = locales(key).default // 读取出文件中的default模块</span></span>
<span class="line"><span>            console.log(&#39;locales(key)&#39;, locales(key))</span></span>
<span class="line"><span>            console.log(&#39;locales(key).default&#39;, locales(key).default)</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    return messages</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// cookie 的使用：安装js-cookie，然后像lodash那样导入注册，get为API方法</span></span>
<span class="line"><span>// cookie.get(&#39;Language&#39;)有则获取到相关值，否则为&#39;zh_CN&#39;</span></span>
<span class="line"><span>let defaultLocale = {</span></span>
<span class="line"><span>    zh_CN: &#39;cn&#39;,</span></span>
<span class="line"><span>    en: &#39;en&#39;,</span></span>
<span class="line"><span>}[cookie.get(&#39;Language&#39;)] || &#39;cn&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>console.log(&#39;国际化语言开始----------------------------------------------------------------------&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>console.log(&#39;cookie.get()&#39;, cookie.get(&#39;Language&#39;))</span></span>
<span class="line"><span>console.log(&#39;defaultLocale&#39;, defaultLocale)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// VueI18n构造器</span></span>
<span class="line"><span>let i18n = new VueI18n({</span></span>
<span class="line"><span>    locale: defaultLocale, // 语言标识，通过它(this.$i18n.locale)进行语言切换</span></span>
<span class="line"><span>    messages: loadLocaleMessages(),</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // locale: &#39;cn&#39;,</span></span>
<span class="line"><span>    // messages: { // 设置翻译信息</span></span>
<span class="line"><span>    //     // key和key所对应的值相同的时可简写成一个</span></span>
<span class="line"><span>    //     cn, // cn: cn,</span></span>
<span class="line"><span>    //     en, // en: en,</span></span>
<span class="line"><span>    // },</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span>console.log(&#39;i18n&#39;, i18n)</span></span>
<span class="line"><span>console.log(&#39;i18n.locale&#39;, i18n.locale)</span></span>
<span class="line"><span>console.log(&#39;i18n.messages&#39;, i18n.messages)</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>const ValidVue = Vue.extend({ i18n }) // extend 为Vue基础构造器，使用基础 Vue 构造器，创建一个“ValidVue子类”。</span></span>
<span class="line"><span>console.log(&#39;使用Vue.extend()Vue基础构造器构造一个ValidVue子类：&#39;, ValidVue)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const oneValidVue = new ValidVue() // 通过 ValidVue子类创建一个实例对象</span></span>
<span class="line"><span>console.log(&#39;通过ValidVue子类 new ValidVue()实例化一个对象oneValidVue：&#39;, oneValidVue)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// fun.bind(this,arg1,arg2,...)</span></span>
<span class="line"><span>// bind()方法会创建一个新的函数，称为绑定函数,fun方法在this环境下调用</span></span>
<span class="line"><span>// 该方法可传入两个参数，第一个参数作为this，第二个及以后的参数则作为函数的参数调用</span></span>
<span class="line"><span>window.$t = oneValidVue.$t.bind(oneValidVue) //</span></span>
<span class="line"><span>window.$tc = oneValidVue.$tc.bind(oneValidVue)</span></span>
<span class="line"><span>console.log(&#39;window.$t:&#39;, oneValidVue.$t.bind(oneValidVue))</span></span>
<span class="line"><span>console.log(&#39;window.$tc:&#39;, oneValidVue.$tc.bind(oneValidVue))</span></span>
<span class="line"><span></span></span>
<span class="line"><span>console.log(&#39;国际化语言结束----------------------------------------------------------------------&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>// export default new VueI18n({</span></span>
<span class="line"><span>//     locale: &#39;cn&#39;,</span></span>
<span class="line"><span>//     messages: {</span></span>
<span class="line"><span>//         cn,</span></span>
<span class="line"><span>//         en,</span></span>
<span class="line"><span>//         ja,</span></span>
<span class="line"><span>//         es,</span></span>
<span class="line"><span>//         ru,</span></span>
<span class="line"><span>//     },</span></span>
<span class="line"><span>// })</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default i18n</span></span></code></pre></div><h4 id="cn-js" tabindex="-1">cn.js <a class="header-anchor" href="#cn-js" aria-label="Permalink to &quot;cn.js&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/* eslint-disable no-template-curly-in-string */</span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>    全部: &#39;全部&#39;,</span></span>
<span class="line"><span>    确认: &#39;确认&#39;,</span></span>
<span class="line"><span>    确定: &#39;确定&#39;,</span></span>
<span class="line"><span>    取消: &#39;取消&#39;,</span></span>
<span class="line"><span>    重置: &#39;重置&#39;,</span></span>
<span class="line"><span>    全选: &#39;全选&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    请选择: &#39;请选择&#39;,</span></span>
<span class="line"><span>    无选项匹配: &#39;无选项匹配&#39;,</span></span>
<span class="line"><span>    请输入搜索关键字: &#39;请输入搜索关键字&#39;,</span></span>
<span class="line"><span>    请输入搜索关键字后回车: &#39;请输入搜索关键字后回车&#39;,</span></span>
<span class="line"><span>    &#39;正在加载, 请稍后&#39;: &#39;正在加载, 请稍后&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    title: &#39;远程共享&#39;,</span></span>
<span class="line"><span>    logout: &#39;退出&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 之前</span></span>
<span class="line"><span>    agentService: &#39;客服坐席&#39;,</span></span>
<span class="line"><span>    authority: &#39;用户无权限，请联系管理员&#39;,</span></span>
<span class="line"><span>    relogin: &#39;重新登录&#39;,</span></span>
<span class="line"><span>    loadingData: &#39;数据加载中...&#39;,</span></span>
<span class="line"><span>    notAuthenticated: &#39;请求未认证，即将跳转登录页面&#39;,</span></span>
<span class="line"><span>    systemError: &#39;系统错误&#39;,</span></span>
<span class="line"><span>    networkTimeout: &#39;网络超时&#39;,</span></span>
<span class="line"><span>    noRequestPermission: &#39;没有请求权限!&#39;,</span></span>
<span class="line"><span>    networkError: &#39;网络错误!&#39;,</span></span>
<span class="line"><span>    forbidden: &#39;访问被禁止&#39;,</span></span>
<span class="line"><span>    requestNotAuthorized: &#39;请求未授权，跳转未授权提示页&#39;,</span></span>
<span class="line"><span>    privacyStatement: &#39;隐私声明&#39;,</span></span>
<span class="line"><span>    numberInputPlaceholder: &#39;请输入手机号&#39;,</span></span>
<span class="line"><span>    loginLimit: &#39;账号登录次数过多&#39;,</span></span>
<span class="line"><span>    helpDocument: &#39;帮助文档&#39;,</span></span>
<span class="line"><span>    requestFrequent: &#39;请求过于频繁，请稍后再试&#39;,</span></span>
<span class="line"><span>    phone: {</span></span>
<span class="line"><span>        noData: &#39;手机号不能为空&#39;,</span></span>
<span class="line"><span>        formatError: &#39;请输入正确的手机号&#39;,</span></span>
<span class="line"><span>        numberType: &#39;请输入数字值&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    content: {</span></span>
<span class="line"><span>        applyCode: &#39;请输入6位连接码&#39;,</span></span>
<span class="line"><span>        obtaining: &#39;正在建立连接...&#39;,</span></span>
<span class="line"><span>        getCodeWay: &#39;连接码获取方式&#39;,</span></span>
<span class="line"><span>        wayOne: &#39;方式一:&#39;,</span></span>
<span class="line"><span>        wayOneText: &#39;长按遥控器电源键8秒以上,待屏幕显示6位数字后,请您反馈下这6个数字。&#39;,</span></span>
<span class="line"><span>        wayTwo: &#39;方式二:&#39;,</span></span>
<span class="line"><span>        wayTwoText: &#39;唤醒语音助手后,说&quot;启动远程协助&quot;,待屏幕显示6位数字后,请您反馈下这6个数字。&#39;,</span></span>
<span class="line"><span>        privacy: &#39;隐私条款提示语&#39;,</span></span>
<span class="line"><span>        privacyTip: &#39;先生/女士, 远程服务的操作均需要经过您的授权,请您阅读隐私条款,若无问题请您点击&quot;同意&quot;,之后我们才开始服务。&#39;,</span></span>
<span class="line"><span>        attention: &#39;(注意事项: 让用户自主选择是否同意)。&#39;,</span></span>
<span class="line"><span>        clientLeave: &#39;端侧已关闭连接, 是否结束本次服务?&#39;,</span></span>
<span class="line"><span>        agentserver_001: &#39;连接码错误，请重新输入&#39;,</span></span>
<span class="line"><span>        agentserver_002: &#39;该码已有坐席正在接入中&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 之前</span></span>
<span class="line"><span>        text: &#39;确定是故障机来电&#39;,</span></span>
<span class="line"><span>        sendSMS: &#39;发送短信&#39;,</span></span>
<span class="line"><span>        agent: &#39;华为客服&#39;,</span></span>
<span class="line"><span>        applyCodeText: &#39;尊敬的用户，请反馈您屏幕上显示的6个数字。&#39;,</span></span>
<span class="line"><span>        friendlyReminder: &#39;，温馨提示：此连接码5分钟内有效，请勿泄露。&#39;,</span></span>
<span class="line"><span>        agentLeave: &#39;您已结束本次服务&#39;,</span></span>
<span class="line"><span>        // clientLeave: &#39;用户已经结束本次服务&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    serviceStatistics: {</span></span>
<span class="line"><span>        todayService: &#39;今日服务数&#39;,</span></span>
<span class="line"><span>        weekService: &#39;本周服务数&#39;,</span></span>
<span class="line"><span>        monthService: &#39;本月服务数&#39;,</span></span>
<span class="line"><span>        accumulatedService: &#39;累计服务数&#39;,</span></span>
<span class="line"><span>        averageService: &#39;平均服务时长&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    SMS: {</span></span>
<span class="line"><span>        tipped: &#39;提示&#39;,</span></span>
<span class="line"><span>        success: &#39;连接码短信发送成功&#39;,</span></span>
<span class="line"><span>        receive: &#39;终端收到连接码短信&#39;,</span></span>
<span class="line"><span>        notReceive: &#39;终端未收到连接码短信&#39;,</span></span>
<span class="line"><span>        codeTimeout: &#39;连接码已失效&#39;,</span></span>
<span class="line"><span>        sending: &#39;正在发送中...&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    leftMenu: {</span></span>
<span class="line"><span>        share: &#39;共享&#39;,</span></span>
<span class="line"><span>        trips: &#39;提示&#39;,</span></span>
<span class="line"><span>        clear: &#39;清除&#39;,</span></span>
<span class="line"><span>        graffiti: &#39;涂鸦&#39;,</span></span>
<span class="line"><span>        canvasFriendlyReminder: &#39;抱歉，您的浏览器暂不支持canvas元素&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        operation: &#39;遥控器操作&#39;,</span></span>
<span class="line"><span>        mouseOperation: &#39;鼠标操作&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rightMenu: {</span></span>
<span class="line"><span>        interactiveTest: &#39;互动检测&#39;,</span></span>
<span class="line"><span>        device: &#39;设备信息&#39;,</span></span>
<span class="line"><span>        remoteDetectionLog: &#39;远程检测日志&#39;,</span></span>
<span class="line"><span>        system_end: &#39;结束服务&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 之前</span></span>
<span class="line"><span>        serviceRecord: &#39;服务记录&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    button: {</span></span>
<span class="line"><span>        confirm: &#39;确认&#39;,</span></span>
<span class="line"><span>        cancel: &#39;取消&#39;,</span></span>
<span class="line"><span>        agree: &#39;同意&#39;,</span></span>
<span class="line"><span>        disagree: &#39;不同意，退出系统&#39;,</span></span>
<span class="line"><span>        withdraw: &#39;撤回&#39;,</span></span>
<span class="line"><span>        goBack: &#39;返回&#39;,</span></span>
<span class="line"><span>        close: &#39;关闭&#39;,</span></span>
<span class="line"><span>        end: &#39;结束服务&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    device: {</span></span>
<span class="line"><span>        phone: &#39;手机版&#39;,</span></span>
<span class="line"><span>        vision: &#39;智慧屏版&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 大屏设备信息</span></span>
<span class="line"><span>        tvModel: &#39;型号:&#39;,</span></span>
<span class="line"><span>        tvInternalStorage: &#39;内存:&#39;,</span></span>
<span class="line"><span>        tvSystemVersion: &#39;版本:&#39;,</span></span>
<span class="line"><span>        tvTotalCapacity: &#39;总容量:&#39;,</span></span>
<span class="line"><span>        tvApkversion: &#39;APK版本:&#39;,</span></span>
<span class="line"><span>        tvAvailableRoom: &#39;可用空间:&#39;,</span></span>
<span class="line"><span>        tvWifiInfo: &#39;wifi强度:&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    service: {</span></span>
<span class="line"><span>        record: &#39;服务记录&#39;,</span></span>
<span class="line"><span>        noRecord: &#39;暂无记录&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    message: {</span></span>
<span class="line"><span>        msgTipped: &#39;信息提示&#39;,</span></span>
<span class="line"><span>        logoutFail: &#39;退出失败，请重试&#39;,</span></span>
<span class="line"><span>        canceled: &#39;已取消操作&#39;,</span></span>
<span class="line"><span>        logoutMessage: &#39;确定退出系统？&#39;,</span></span>
<span class="line"><span>        logoutSign: &#39;提示&#39;,</span></span>
<span class="line"><span>        applyCodeMessage: &#39;获取连接码过于频繁，请稍后再试&#39;,</span></span>
<span class="line"><span>        noApplyCode: &#39;连接码不存在，请稍候再试&#39;,</span></span>
<span class="line"><span>        restoreMessage: &#39;远程服务已恢复&#39;,</span></span>
<span class="line"><span>        refuseRestoreMessage: &#39;用户已拒绝恢复远程共享桌面,请稍后重试&#39;,</span></span>
<span class="line"><span>        forbidSharing: &#39;用户正在运行禁止共享的应用&#39;,</span></span>
<span class="line"><span>        // leaveDeskOne: &#39;确定后将离开远程服务&#39;,</span></span>
<span class="line"><span>        leaveDeskOne: &#39;您确定要结束服务?&#39;,</span></span>
<span class="line"><span>        // leaveDeskTwo: &#39;确定结束服务？&#39;,</span></span>
<span class="line"><span>        leaveDeskTwo: &#39;提示&#39;,</span></span>
<span class="line"><span>        leaveDeskThree: &#39;端侧已关闭连接, 确定要结束服务?&#39;,</span></span>
<span class="line"><span>        requestRestoreMessage: &#39;用户已暂停远程共享桌面,点击按钮可请求恢复&#39;,</span></span>
<span class="line"><span>        stopDesk: &#39;用户已暂停共享，请等待用户恢复共享&#39;,</span></span>
<span class="line"><span>        clientReconnect: &#39;用户网络异常，请等待用户重连&#39;,</span></span>
<span class="line"><span>        joinRoomFail: &#39;加入房间失败&#39;,</span></span>
<span class="line"><span>        joinException: &#39;加入异常&#39;,</span></span>
<span class="line"><span>        connectionException: &#39;连接异常&#39;,</span></span>
<span class="line"><span>        subscriptionFailed: &#39;订阅失败&#39;,</span></span>
<span class="line"><span>        // roomNonentity: &#39;房间不存在&#39;,</span></span>
<span class="line"><span>        roomNonentity: &#39;房间不存在, 确定要结束服务?&#39;,</span></span>
<span class="line"><span>        // clinentOffline: &#39;客户端不在线&#39;,</span></span>
<span class="line"><span>        clinentOffline: &#39;客户端不在线, 确定要结束服务?&#39;,</span></span>
<span class="line"><span>        imageLoadingFail: &#39;图片加载失败&#39;,</span></span>
<span class="line"><span>        agreedPrivacy: &#39;您已同意隐私声明&#39;,</span></span>
<span class="line"><span>        withdrawPrivacy: &#39;是否确认撤回隐私声明？&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        remarkSuccess: &#39;备注信息保存成功&#39;,</span></span>
<span class="line"><span>        remarkError: &#39;备注信息保存失败&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>}</span></span></code></pre></div><h4 id="en-js" tabindex="-1">en.js <a class="header-anchor" href="#en-js" aria-label="Permalink to &quot;en.js&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>/* eslint-disable no-template-curly-in-string */</span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>    全部: &#39;All&#39;,</span></span>
<span class="line"><span>    确认: &#39;Confirm&#39;,</span></span>
<span class="line"><span>    确定: &#39;Yes&#39;,</span></span>
<span class="line"><span>    取消: &#39;Cancel&#39;,</span></span>
<span class="line"><span>    重置: &#39;Reset&#39;,</span></span>
<span class="line"><span>    全选: &#39;Select All&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    请选择: &#39;Please Select&#39;,</span></span>
<span class="line"><span>    无选项匹配: &#39;No Option Match&#39;,</span></span>
<span class="line"><span>    请输入搜索关键字: &#39;Please enter Search Keywords&#39;,</span></span>
<span class="line"><span>    请输入搜索关键字后回车: &#39;Please enter Search Keywords and press Enter&#39;,</span></span>
<span class="line"><span>    &#39;正在加载, 请稍后&#39;: &#39;Loading, Please Wait&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    title: &#39;Remote shared&#39;,</span></span>
<span class="line"><span>    logout: &#39;Exit&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    // 之前</span></span>
<span class="line"><span>    agentService: &#39;Agent Service&#39;,</span></span>
<span class="line"><span>    authority: &#39;The user does not have the permission. Please contact the administrator.&#39;,</span></span>
<span class="line"><span>    relogin: &#39;Login again&#39;,</span></span>
<span class="line"><span>    loadingData: &#39;Loading data...&#39;,</span></span>
<span class="line"><span>    notAuthenticated: &#39;The request is not authenticated. The login page is about to be displayed.&#39;,</span></span>
<span class="line"><span>    systemError: &#39;systemError&#39;,</span></span>
<span class="line"><span>    networkTimeout: &#39;networkTimeout&#39;,</span></span>
<span class="line"><span>    noRequestPermission: &#39;noRequestPermission!&#39;,</span></span>
<span class="line"><span>    networkError: &#39;networkError!&#39;,</span></span>
<span class="line"><span>    forbidden: &#39;forbidden&#39;,</span></span>
<span class="line"><span>    requestNotAuthorized: &#39;The request is not authorized, and the unauthorized page is displayed.&#39;,</span></span>
<span class="line"><span>    privacyStatement: &#39;Privacy Statement&#39;,</span></span>
<span class="line"><span>    numberInputPlaceholder: &#39;Number Input Placeholder&#39;,</span></span>
<span class="line"><span>    loginLimit: &#39;Too many account logins&#39;,</span></span>
<span class="line"><span>    helpDocument: &#39;Help Document&#39;,</span></span>
<span class="line"><span>    requestFrequent: &#39;The request is too frequent. Please try again later&#39;,</span></span>
<span class="line"><span>    phone: {</span></span>
<span class="line"><span>        noData: &#39;Phone number cannot be empty&#39;,</span></span>
<span class="line"><span>        formatError: &#39;please enter a valid phone number&#39;,</span></span>
<span class="line"><span>        numberType: &#39;please enter a numeric value&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>    content: {</span></span>
<span class="line"><span>        applyCode: &#39;Please enter the accesscode&#39;,</span></span>
<span class="line"><span>        obtaining: &#39;Establishing a connection...&#39;,</span></span>
<span class="line"><span>        getCodeWay: &#39;Obtaining the connection code&#39;,</span></span>
<span class="line"><span>        wayOne: &#39;The way of one:&#39;,</span></span>
<span class="line"><span>        wayOneText: &#39;Long press the power button of the remote control for more than 8 seconds. After 6 digits are displayed on the screen, please feedback these 6 digits.&#39;,</span></span>
<span class="line"><span>        wayTwo: &#39;The way of two:&#39;,</span></span>
<span class="line"><span>        wayTwoText: &#39;Wake up the voice assistant, say &quot;start remote assistance &quot;, wait for the screen to display six digits, please feedback these six digits.&#39;,</span></span>
<span class="line"><span>        privacy: &#39;Privacy policy reminder&#39;,</span></span>
<span class="line"><span>        privacyTip: &#39;Sir/Madam, the operation of the remote service requires your authorization. Please read the Privacy Policy. If there is no problem, please click &quot;Agree&quot; before we start the service.&#39;,</span></span>
<span class="line"><span>        attention: &#39;(Note: let the user choose whether to agree or not).&#39;,</span></span>
<span class="line"><span>        clientLeave: &#39;The user has ended the service.&#39;,</span></span>
<span class="line"><span>        agentserver_001: &#39;Incorrect connection code. Please enter another one.&#39;,</span></span>
<span class="line"><span>        agentserver_002: &#39;An agent with this code is accessing the network.&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 之前</span></span>
<span class="line"><span>        text: &#39;Check whether the phone is faulty&#39;,</span></span>
<span class="line"><span>        sendSMS: &#39;Sending SMS messages&#39;,</span></span>
<span class="line"><span>        agent: &#39;Huawei Customer Service&#39;,</span></span>
<span class="line"><span>        applyCodeText: &#39; Dear user, your remote desktop connection code is&#39;,</span></span>
<span class="line"><span>        friendlyReminder: &#39;, Note: This connection code is valid for 5 minutes. Do not disclose it.&#39;,</span></span>
<span class="line"><span>        agentLeave: &#39;You have ended this service.&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    serviceStatistics: {</span></span>
<span class="line"><span>        todayService: &#39;Num of services today&#39;,</span></span>
<span class="line"><span>        weekService: &#39;Num of services this week&#39;,</span></span>
<span class="line"><span>        monthService: &#39;Num of services this month&#39;,</span></span>
<span class="line"><span>        accumulatedService: &#39;Accumulated num of services&#39;,</span></span>
<span class="line"><span>        averageService: &#39;Average service duration&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    SMS: {</span></span>
<span class="line"><span>        tipped: &#39;Prompting&#39;,</span></span>
<span class="line"><span>        success: &#39;The connection code SMS message is sent successfully.&#39;,</span></span>
<span class="line"><span>        receive: &#39;The terminal receives a connection code SMS message.&#39;,</span></span>
<span class="line"><span>        notReceive: &#39;The terminal does not receive the connection code SMS message.&#39;,</span></span>
<span class="line"><span>        codeTimeout: &#39;Verification Code Invalidation&#39;,</span></span>
<span class="line"><span>        sending: &#39;sending&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    leftMenu: {</span></span>
<span class="line"><span>        share: &#39;Sharing&#39;,</span></span>
<span class="line"><span>        trips: &#39;Prompting&#39;,</span></span>
<span class="line"><span>        clear: &#39;Clear&#39;,</span></span>
<span class="line"><span>        graffiti: &#39;Graffiti&#39;,</span></span>
<span class="line"><span>        canvasFriendlyReminder: &#39;Sorry, your browser does not support the canvas element.&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        operation: &#39;Remote control operation&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    rightMenu: {</span></span>
<span class="line"><span>        interactiveTest: &#39;Interactive testing&#39;,</span></span>
<span class="line"><span>        device: &#39;Device information&#39;,</span></span>
<span class="line"><span>        remoteCommand: &#39;Remote command&#39;,</span></span>
<span class="line"><span>        remoteDetectionLog: &#39;Remote log&#39;,</span></span>
<span class="line"><span>        testResult: &#39;Result&#39;,</span></span>
<span class="line"><span>        system_end: &#39;Ending&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 之前</span></span>
<span class="line"><span>        serviceRecord: &#39;Service Records&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    button: {</span></span>
<span class="line"><span>        confirm: &#39;OK&#39;,</span></span>
<span class="line"><span>        cancel: &#39;Cancel&#39;,</span></span>
<span class="line"><span>        agree: &#39;Agree&#39;,</span></span>
<span class="line"><span>        disagree: &#39;No, logout&#39;,</span></span>
<span class="line"><span>        withdraw: &#39;Withdraw&#39;,</span></span>
<span class="line"><span>        goBack: &#39;Go back&#39;,</span></span>
<span class="line"><span>        close: &#39;close&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    device: {</span></span>
<span class="line"><span>        phone: &#39;手机版&#39;,</span></span>
<span class="line"><span>        vision: &#39;智慧屏版&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // 大屏设备信息</span></span>
<span class="line"><span>        tvModel: &#39;Model:&#39;,</span></span>
<span class="line"><span>        tvInternalStorage: &#39;Memory:&#39;,</span></span>
<span class="line"><span>        tvSystemVersion: &#39;Version:&#39;,</span></span>
<span class="line"><span>        tvTotalCapacity: &#39;Total capacity:&#39;,</span></span>
<span class="line"><span>        tvApkversion: &#39;Apk version:&#39;,</span></span>
<span class="line"><span>        tvAvailableRoom: &#39;Available space:&#39;,</span></span>
<span class="line"><span>        tvWifiInfo: &#39;Intensity of wifi:&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    service: {</span></span>
<span class="line"><span>        record: &#39;Service Records&#39;,</span></span>
<span class="line"><span>        noRecord: &#39;No record&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    message: {</span></span>
<span class="line"><span>        msgTipped: &#39;Information&#39;,</span></span>
<span class="line"><span>        logoutFail: &#39;Exit failed. Please try again.&#39;,</span></span>
<span class="line"><span>        canceled: &#39;Operation canceled&#39;,</span></span>
<span class="line"><span>        logoutMessage: &#39;Are you sure you want to exit the system?&#39;,</span></span>
<span class="line"><span>        logoutSign: &#39;prompting&#39;,</span></span>
<span class="line"><span>        applyCodeMessage: &#39;The connection code is obtained too frequently. Please try again later.&#39;,</span></span>
<span class="line"><span>        noApplyCode: &#39;The connection code does not exist. Please try again later.&#39;,</span></span>
<span class="line"><span>        restoreMessage: &#39;Remote Desktop recovered&#39;,</span></span>
<span class="line"><span>        refuseRestoreMessage: &#39;The user has refused to restore the remote shared desktop. Please try again later.&#39;,</span></span>
<span class="line"><span>        forbidSharing: &#39;The user is running an application that is not allowed to be shared.&#39;,</span></span>
<span class="line"><span>        leaveDeskOne: &#39;Are you sure you want to end the service?&#39;,</span></span>
<span class="line"><span>        leaveDeskTwo: &#39;Tip&#39;,</span></span>
<span class="line"><span>        leaveDeskThree: &#39;The connection is closed at the end, are you sure you want to end the service?&#39;,</span></span>
<span class="line"><span>        requestRestoreMessage: &#39;The user has paused remote desktop sharing. Click to resume the remote desktop sharing.&#39;,</span></span>
<span class="line"><span>        stopDesk: &#39;The user has paused the sharing. Please wait for the user to resume the sharing.&#39;,</span></span>
<span class="line"><span>        clientReconnect: &#39;The user network is abnormal. Please wait for the user to reconnect.&#39;,</span></span>
<span class="line"><span>        joinRoomFail: &#39;joinRoomFail!&#39;,</span></span>
<span class="line"><span>        joinException: &#39;Join Exception&#39;,</span></span>
<span class="line"><span>        connectionException: &#39;Connection Exception&#39;,</span></span>
<span class="line"><span>        subscriptionFailed: &#39;subscription Failed&#39;,</span></span>
<span class="line"><span>        roomNonentity: &#39;Room nonentity, are you sure to end the service?&#39;,</span></span>
<span class="line"><span>        clinentOffline: &#39;Clinent offline, are you sure to end the service?&#39;,</span></span>
<span class="line"><span>        imageLoadingFail: &#39;Image Loading Fail&#39;,</span></span>
<span class="line"><span>        agreedPrivacy: &#39;You have agreed to the privacy statement&#39;,</span></span>
<span class="line"><span>        withdrawPrivacy: &#39;Confirm withdrawal of privacy statement?&#39;,</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        remarkSuccess: &#39;备注信息保存成功&#39;,</span></span>
<span class="line"><span>        remarkError: &#39;备注信息保存失败&#39;,</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>}</span></span></code></pre></div><h3 id="在main-js中进行注册" tabindex="-1">在main.js中进行注册 <a class="header-anchor" href="#在main-js中进行注册" aria-label="Permalink to &quot;在main.js中进行注册&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import Vue from &#39;vue&#39;</span></span>
<span class="line"><span>import App from &#39;@/App.vue&#39;</span></span>
<span class="line"><span>import i18n from &#39;@/i18n/index.js&#39;</span></span>
<span class="line"><span>import store from &#39;@/store/index.js&#39;</span></span>
<span class="line"><span>import router from &#39;@/router/index.js&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Vue.config.performance = (process.env.NODE_ENV === &#39;development&#39;)</span></span>
<span class="line"><span>Vue.config.productionTip = false</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const $app = new Vue({</span></span>
<span class="line"><span>    i18n,</span></span>
<span class="line"><span>    store,</span></span>
<span class="line"><span>    router,</span></span>
<span class="line"><span>    render: (h) =&gt; h(App),</span></span>
<span class="line"><span>}).$mount(&#39;#app&#39;)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>window.$this = $app</span></span></code></pre></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&lt;template&gt;</span></span>
<span class="line"><span>    &lt;div class=&quot;nav&quot;&gt;</span></span>
<span class="line"><span>        &lt;div style=&quot;margin-bottom: 20px;&quot;&gt;</span></span>
<span class="line"><span>            &lt;div&gt;</span></span>
<span class="line"><span>                &lt;a href=&quot;https://kazupon.github.io/vue-i18n/zh/guide/messages.html#%E7%BB%93%E6%9E%84&quot; target=&quot;_blank&quot;&gt;国际化语言参考链接(可点击跳转)&lt;/a&gt;</span></span>
<span class="line"><span>            &lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;</span></span>
<span class="line"><span>                &lt;a href=&quot;https://www.jianshu.com/p/c894ea00dfec&quot; target=&quot;_blank&quot;&gt;使用require.context实现前端工程自动化&lt;/a&gt;</span></span>
<span class="line"><span>            &lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;</span></span>
<span class="line"><span>                &lt;a href=&quot;https://juejin.cn/post/6844903828374945799&quot; target=&quot;_blank&quot;&gt;探究js正则匹配方法：match和exec&lt;/a&gt; 使用Vue.extend封装组件</span></span>
<span class="line"><span>            &lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;</span></span>
<span class="line"><span>                &lt;a href=&quot;https://juejin.cn/search?from=main_page&amp;query=Vue.extend&quot; target=&quot;_blank&quot;&gt;使用Vue.extend封装组件&lt;/a&gt;</span></span>
<span class="line"><span>            &lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;</span></span>
<span class="line"><span>                &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/cookies/get&quot; target=&quot;_blank&quot;&gt;cookie.get()&lt;/a&gt;</span></span>
<span class="line"><span>            &lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;</span></span>
<span class="line"><span>                &lt;a href=&quot;https://www.huaweicloud.com/articles/0aa2c2758d5438c0832783a1cbfc1c42.html&quot; target=&quot;_blank&quot;&gt;js-cookie&lt;/a&gt;</span></span>
<span class="line"><span>            &lt;/div&gt;</span></span>
<span class="line"><span>        &lt;/div&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        &lt;!-- &lt;div class=&quot;language-img&quot; @click=&quot;changeLangusge&quot;&gt;</span></span>
<span class="line"><span>            &lt;img v-if=&quot;$i18n.locale === &#39;cn&#39;&quot; src=&quot;./img/lang-en_US.png&quot;&gt;</span></span>
<span class="line"><span>            &lt;img v-if=&quot;$i18n.locale === &#39;en&#39;&quot; src=&quot;./img/lang-zh_CN.png&quot;&gt;</span></span>
<span class="line"><span>        &lt;/div&gt; --&gt;</span></span>
<span class="line"><span>        &lt;Button v-if=&quot;$i18n.locale === &#39;en&#39;&quot; @click=&quot;changeLangusge&quot;&gt;简体中文&lt;/Button&gt;</span></span>
<span class="line"><span>        &lt;Button v-if=&quot;$i18n.locale === &#39;cn&#39;&quot; @click=&quot;changeLangusge&quot;&gt;英文&lt;/Button&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>        &lt;el-dropdown class=&quot;ml20&quot;&gt;</span></span>
<span class="line"><span>            &lt;span class=&quot;el-dropdown-link&quot;&gt;</span></span>
<span class="line"><span>                {{ currentLang }}</span></span>
<span class="line"><span>                &lt;i class=&quot;el-icon-arrow-down el-icon--right&quot; /&gt;</span></span>
<span class="line"><span>            &lt;/span&gt;</span></span>
<span class="line"><span>            &lt;el-dropdown-menu slot=&quot;dropdown&quot;&gt;</span></span>
<span class="line"><span>                &lt;el-dropdown-item v-for=&quot;lang in langList&quot; :key=&quot;lang.code&quot; @click.native=&quot;changeLang(lang)&quot;&gt;{{ lang.label }}&lt;/el-dropdown-item&gt;</span></span>
<span class="line"><span>            &lt;/el-dropdown-menu&gt;</span></span>
<span class="line"><span>        &lt;/el-dropdown&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>        &lt;div style=&quot;margin-top: 20px;&quot;&gt;</span></span>
<span class="line"><span>            &lt;div&gt;{{ $t(&#39;全选&#39;) }}&lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;{{ $t(&#39;loadingData&#39;) }}&lt;/div&gt;</span></span>
<span class="line"><span>            &lt;div&gt;{{ $t(&#39;请输入搜索关键字&#39;) }}&lt;/div&gt;</span></span>
<span class="line"><span>        &lt;/div&gt;</span></span>
<span class="line"><span>    &lt;/div&gt;</span></span>
<span class="line"><span>&lt;/template&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;script&gt;</span></span>
<span class="line"><span>import { language } from &#39;./js/languageList.js&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>export default {</span></span>
<span class="line"><span>    data() {</span></span>
<span class="line"><span>        return {</span></span>
<span class="line"><span>            currentLang: &#39;&#39;,</span></span>
<span class="line"><span>            langList: [],</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    methods: {</span></span>
<span class="line"><span>        // 语言类型保存到后台，</span></span>
<span class="line"><span>        // 前台语言类型由后台告知我，前台通过 cookie.get(&#39;Language&#39;)</span></span>
<span class="line"><span>        // 实现流程：将当前语言取反之后保存到后台，然后刷新页面，刷新页面时在 i18n的index.js中通过cookie.get(&#39;Language&#39;)获取刚保存到后台的语言(关键点是要刷新一下页面)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        // async changeLangusge() {</span></span>
<span class="line"><span>        // this.$loading.show()</span></span>
<span class="line"><span>        // await axios({</span></span>
<span class="line"><span>        //     method: &#39;post&#39;,</span></span>
<span class="line"><span>        //     url: &#39;/changeLanguage&#39;,</span></span>
<span class="line"><span>        //     data: qs.stringify({</span></span>
<span class="line"><span>        //         lang: {</span></span>
<span class="line"><span>        //             zh_CN: &#39;en&#39;,</span></span>
<span class="line"><span>        //             en_US: &#39;zh_CN&#39;,</span></span>
<span class="line"><span>        //         }[this.$i18n.locale],</span></span>
<span class="line"><span>        //     }),</span></span>
<span class="line"><span>        // })</span></span>
<span class="line"><span>        // window.location.reload() // 刷新页面</span></span>
<span class="line"><span>        // },</span></span>
<span class="line"><span>        changeLangusge() {</span></span>
<span class="line"><span>            if (this.$i18n.locale === &#39;cn&#39;) {</span></span>
<span class="line"><span>                this.$i18n.locale = &#39;en&#39;</span></span>
<span class="line"><span>            } else if (this.$i18n.locale === &#39;en&#39;) {</span></span>
<span class="line"><span>                this.$i18n.locale = &#39;cn&#39;</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>        changeLang(langItem) {</span></span>
<span class="line"><span>            console.log(&#39;langItem&#39;, langItem)</span></span>
<span class="line"><span>            if (this.currentLang === langItem.label) { // 如果切换的与原先相同则不做处理</span></span>
<span class="line"><span>                return</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>            this.currentLang = langItem.label // 展示切换的最新语言标题</span></span>
<span class="line"><span>            this.$i18n.locale = langItem.code // 语言切换的关键</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            // localStorage.setItem(&#39;agentLang&#39;, encode(this.currentLang))</span></span>
<span class="line"><span>            localStorage.setItem(&#39;agentLang&#39;, this.currentLang) // 保存到缓存中</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        getCurrentLang() {</span></span>
<span class="line"><span>            this.langList = language // language为自定义的语言列表</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            // this.currentLang = decode(localStorage.getItem(&#39;agentLang&#39;)) || this.langList[0].label</span></span>
<span class="line"><span>            this.currentLang = localStorage.getItem(&#39;agentLang&#39;) || this.langList[0].label // 缓存中获取当前语言，如果没有默认显示第一个(展示用)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            const index = this.langList.findIndex((lang) =&gt; lang.label === this.currentLang) // 在自定义的语言列表中找出切换到最新语言的index</span></span>
<span class="line"><span>            this.$i18n.locale = index === -1 ? this.langList[0].code : this.langList[index].code // 通过index在自定义的语言列表中找到决定语言切换的code</span></span>
<span class="line"><span></span></span>
<span class="line"><span>            // localStorage.setItem(&#39;agentLang&#39;, encode(this.currentLang))</span></span>
<span class="line"><span>            localStorage.setItem(&#39;agentLang&#39;, this.currentLang) // 将新切换的语言保存到缓存中</span></span>
<span class="line"><span>        },</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    mounted() {</span></span>
<span class="line"><span>        console.log(&#39;this.$i18n&#39;, this.$i18n)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        this.getCurrentLang()</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/script&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;style scoped&gt;</span></span>
<span class="line"><span>.nav {</span></span>
<span class="line"><span>    font-family: Avenir, Helvetica, Arial, sans-serif;</span></span>
<span class="line"><span>    -webkit-font-smoothing: antialiased;</span></span>
<span class="line"><span>    -moz-osx-font-smoothing: grayscale;</span></span>
<span class="line"><span>    /* text-align: center; */</span></span>
<span class="line"><span>    color: #2c3e50;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    padding: 30px;</span></span>
<span class="line"><span>    text-align: center;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span></span></span>
<span class="line"><span>.el-dropdown-link {</span></span>
<span class="line"><span>    color: #3b444b;</span></span>
<span class="line"><span>    cursor: pointer;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>.el-dropdown-link:hover {</span></span>
<span class="line"><span>    color: #0a7ed6;</span></span>
<span class="line"><span>    cursor: pointer;</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>&lt;/style&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// 前台将目前的语言类型告知后台 (前台向后台传递消息)</span></span>
<span class="line"><span>import Vue from &#39;vue&#39;</span></span>
<span class="line"><span>import axios from &#39;axios&#39;</span></span>
<span class="line"><span>import i18n from &#39;@/i18n&#39;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>const httpService = axios.create({</span></span>
<span class="line"><span>    baseURL: &#39;api&#39;,</span></span>
<span class="line"><span>    timeout: 20000,</span></span>
<span class="line"><span>})</span></span>
<span class="line"><span></span></span>
<span class="line"><span>httpService.interceptors.request.use( // 请求拦截器</span></span>
<span class="line"><span>    (config) =&gt; {</span></span>
<span class="line"><span>        if (!config.url) { return }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        const localLang = decode(localStorage.getItem(&#39;agentLang&#39;)) || language[0].label // 获取前台当前的语言类型</span></span>
<span class="line"><span>        const index = language.findIndex((lang) =&gt; lang.label === localLang || lang.code === localLang) // 确定index</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        config.headers[&#39;Accept-Language&#39;] = language[index].key // 将相关语言的类型作为请求头的一部分告知后台</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        return config</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>    (error) =&gt; {</span></span>
<span class="line"><span>        Promise.reject(new Error(error))</span></span>
<span class="line"><span>    },</span></span>
<span class="line"><span>)</span></span></code></pre></div>`,15),i=[l];function c(t,o,r,g,d,u){return a(),s("div",null,i)}const v=n(e,[["render",c]]);export{m as __pageData,v as default};
