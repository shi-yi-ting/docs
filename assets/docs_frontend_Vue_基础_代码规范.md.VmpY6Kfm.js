import{_ as s,c as a,o as n,U as e}from"./chunks/framework.zpeVKxWT.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend/Vue/基础/代码规范.md","filePath":"docs/frontend/Vue/基础/代码规范.md"}'),t={name:"docs/frontend/Vue/基础/代码规范.md"},i=e(`<h2 id="代码规范" tabindex="-1">代码规范 <a class="header-anchor" href="#代码规范" aria-label="Permalink to &quot;代码规范&quot;">​</a></h2><h3 id="编辑器配置" tabindex="-1">编辑器配置 <a class="header-anchor" href="#编辑器配置" aria-label="Permalink to &quot;编辑器配置&quot;">​</a></h3><p>代码去掉尾部空格和在最后一行新增一行,在编辑器中进行设置,主要设置为</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;files.trimFinalNewlines&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;files.trimTrailingWhitespace&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">,</span></span></code></pre></div><h3 id="eslint代码检验配置" tabindex="-1">Eslint代码检验配置 <a class="header-anchor" href="#eslint代码检验配置" aria-label="Permalink to &quot;Eslint代码检验配置&quot;">​</a></h3><p><a href="https://eslint.bootcss.com/docs/user-guide/configuring" target="_blank" rel="noreferrer">https://eslint.bootcss.com/docs/user-guide/configuring</a></p><p><strong>eslintrc.js文件是安装eslint之后自动生成的</strong> 1.vscode软件上安装的eslint插件是针对编辑器,他会根据 eslint规则在书写代码的时候给出报错(画红线)提示 2.创建项目的时候安装的 Linter/Formatter或者通过npm安装的eslint他会在项目编译的时候进行检验,报错信息在终端中进行 3.如果 vscope中不安装 eslint插件,代码编写阶段不对代码做 eslint检验,只有安装了 eslint插件才会在代码编写阶段根据eslint规则进行检验并给出相关红线提 4.保存时根据eslint规则自动格式化需要在 settings.json 配置文件中加如下代码</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;editor.codeActionsOnSave&quot;:{</span></span>
<span class="line"><span>    &quot;source.fixAll.eslint&quot;: true</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>// 如此将会在ct+s保存的时候根据 eslint 自动修正代码</span></span></code></pre></div><h3 id="关闭-eslint" tabindex="-1">关闭 eslint <a class="header-anchor" href="#关闭-eslint" aria-label="Permalink to &quot;关闭 eslint&quot;">​</a></h3><p>1.直接将 vocode中得eslint禁用,只关闭对编辑器的检验,并没有关闭编译过程的检验 2.在 vue.config.js上配置如下:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>module.exports = {</span></span>
<span class="line"><span>    lintOnSave: false,</span></span>
<span class="line"><span>}</span></span>
<span class="line"><span>// 此时编辑器和编译的检验全关闭,大的错误还是会又提示,小的错误不会有提示，为true时小的错误也会有提示</span></span></code></pre></div><p>3.使用 eslintignore文件关闭 elint校验(有选择的关闭) 在根目录里新建 eslintignore文件在里面忽略就行,例如忽略sc文件如: <code>/src/assets/js/**</code> 表示src文件夹里面的 assets文件夹里面的js文件夹里面的所有文件 <code>/src/assets/js/*adad*</code> 表示src文件夹里面的 assets文件夹里面的js文件里面的adad开头的所有内容</p><h3 id="代码上库之前检验" tabindex="-1">代码上库之前检验 <a class="header-anchor" href="#代码上库之前检验" aria-label="Permalink to &quot;代码上库之前检验&quot;">​</a></h3><p><a href="https://blog.csdn.net/qq_35844177/article/details/90062809" target="_blank" rel="noreferrer">https://blog.csdn.net/qq_35844177/article/details/90062809</a></p><p>提交代码 eslint 检查并自动格式化 在项目根目录下安装 <strong>yarn add --dev husky lint-staged</strong> 修改 package.json文件</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;gitHooks&quot;: {</span></span>
<span class="line"><span>    &quot;pre-commit&quot;: &quot;lint-staged&quot;</span></span>
<span class="line"><span>},</span></span>
<span class="line"><span>&quot;lint-staged&quot;: {</span></span>
<span class="line"><span>    &quot;*{js, jsx, vue, ts, tsx}&quot;: [</span></span>
<span class="line"><span>        &quot;yarn lint&quot;</span></span>
<span class="line"><span>    ]</span></span>
<span class="line"><span>}</span></span></code></pre></div><p><strong>在 settings.json中的file配置中可以设置文件夹的显示与隐藏,配置案例如</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>&quot;files.exclude&quot;: {</span></span>
<span class="line"><span>    &quot;**/.git&quot;: true,</span></span>
<span class="line"><span>    &quot;**/.svn&quot;: true,</span></span>
<span class="line"><span>    &quot;**/.hg&quot;: true,</span></span>
<span class="line"><span>    &quot;**/.history&quot;: true,</span></span>
<span class="line"><span>    &quot;**/CVS&quot;: true,</span></span>
<span class="line"><span>    &quot;**/.DS_Store&quot;: true,</span></span>
<span class="line"><span>    &quot;**/node_modules&quot;: true</span></span>
<span class="line"><span>},</span></span></code></pre></div><p><strong>eslint-plugin-vue</strong><a href="https://eslint.vuejs.org/rules/max-attributes-per-line.html" target="_blank" rel="noreferrer">https://eslint.vuejs.org/rules/max-attributes-per-line.html</a></p>`,19),p=[i];function l(o,r,c,d,u,h){return n(),a("div",null,p)}const q=s(t,[["render",l]]);export{k as __pageData,q as default};
