import{_ as t,c as e,o as a,U as i}from"./chunks/framework.FpOEJISx.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend/Vue/基础/publicPath.md","filePath":"docs/frontend/Vue/基础/publicPath.md"}'),l={name:"docs/frontend/Vue/基础/publicPath.md"},r=i('<h2 id="publicpath-参考链接-参考链接" tabindex="-1">publicPath<a href="https://juejin.cn/post/6844904126699044872" target="_blank" rel="noreferrer">(参考链接)</a><a href="https://juejin.cn/post/6844903601060446221" target="_blank" rel="noreferrer">(参考链接)</a> <a class="header-anchor" href="#publicpath-参考链接-参考链接" aria-label="Permalink to &quot;publicPath[(参考链接)](https://juejin.cn/post/6844904126699044872)[(参考链接)](https://juejin.cn/post/6844903601060446221)&quot;">​</a></h2><p>publicPath的作用就是决定img js static 文件夹的位置， 为&#39;/&#39;时这些文件夹在域名的根路径上， 为&#39;./&#39;时这些文件会在index.html文件所在位置的同级目录上 static文件夹中的文件建议最好使用绝对路径</p><h3 id="publicpath" tabindex="-1">publicPath: &#39;/&#39; <a class="header-anchor" href="#publicpath" aria-label="Permalink to &quot;publicPath: &#39;/&#39;&quot;">​</a></h3><ol><li>publicPath默认为&#39;/&#39; 默认情况下，Vue CLI 会假设你的应用是被部署在一个域名的根路径上</li><li>例如 <a href="https://www.my-app.com/" target="_blank" rel="noreferrer">https://www.my-app.com/</a> (页面可访问)此时的index.html和打包之后的img js static同在域名的根路径上</li><li>例如 <a href="https://www.my-app.com/web/%E8%B7%AF%E7%94%B1%E5%9C%B0%E5%9D%80" target="_blank" rel="noreferrer">https://www.my-app.com/web/路由地址</a> (页面可访问)此时index.html会放在web文件夹里面，而img js static 等文件依然放在域名的根路径上，如果此时页面中访问static文件夹中的文件使用相对路径如 图片将加载不出来，原因是&#39;./&#39;相对路径相对的是index.html所在的文件夹，并且static文件夹中的文件不会经过webpack进行 打包成为依赖，向那些经过webpack打包成为依赖项的图片则不会出现这种加载不出来的情况，解决办法：是在访问 static文件夹中的文件时使用绝对路径，&#39;/static&#39;绝对路径直接指向域名的根路径上</li></ol><h3 id="publicpath-和-publicpath" tabindex="-1">publicPath: &#39;&#39;, 和 publicPath: &#39;./&#39; <a class="header-anchor" href="#publicpath-和-publicpath" aria-label="Permalink to &quot;publicPath: &#39;&#39;, 和 publicPath: &#39;./&#39;&quot;">​</a></h3><ol><li>所有的资源都会被链接为相对路径，这样打出来的包可以被部署在任意路径</li><li>例如 <a href="https://www.my-app.com/" target="_blank" rel="noreferrer">https://www.my-app.com/</a> (页面可访问) 此时的index.html和打包之后的img js static同在域名的根路径上</li><li>例如 <a href="https://www.my-app.com/web/%E8%B7%AF%E7%94%B1%E5%9C%B0%E5%9D%80" target="_blank" rel="noreferrer">https://www.my-app.com/web/路由地址</a> (页面不可访问)此时index.html会放在web文件夹里面，而img js static 等文件和它一样在同一个文件夹中,也就是不能有/web</li></ol><h3 id="publicpath-web" tabindex="-1">publicPath: &#39;/web/&#39; <a class="header-anchor" href="#publicpath-web" aria-label="Permalink to &quot;publicPath: &#39;/web/&#39;&quot;">​</a></h3><ol><li>如果应用被部署在一个子路径上，你就需要用这个选项指定这个子路径。</li><li>例如，如果你的应用被部署在 <a href="https://www.my-app.com/web/%EF%BC%8C%E5%88%99%E8%AE%BE%E7%BD%AE" target="_blank" rel="noreferrer">https://www.my-app.com/web/，则设置</a> publicPath 为 /web/。</li><li>此时 img js font等文件将会在web文件夹中</li><li><a href="https://www.my-app.com/web/123/%E8%B7%AF%E7%94%B1" target="_blank" rel="noreferrer">https://www.my-app.com/web/123/路由</a> 此时的index.html将被放在123文件夹中</li><li>可通过web文件夹中找到static中的文件也可在域名的根路径上找到static中的文件</li></ol><h3 id="vue-config-js" tabindex="-1">vue.config.js <a class="header-anchor" href="#vue-config-js" aria-label="Permalink to &quot;vue.config.js&quot;">​</a></h3><p>开发者工具中的Sources Sources面板中的page展示的当前页面的资源列表</p><p>解决Vue项目打包后打开index.html页面显示空白以及图片路径错误的问题<a href="https://blog.csdn.net/weixin_43953710/article/details/102953286?utm_medium=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant_download.none-task-blog-baidujs-1.nonecase" target="_blank" rel="noreferrer">(参考链接)</a>Vue项目运行npm run build后会生成一个dist文件夹，我们一般都是把这个文件夹部署到服务 器上。dist文件夹里边有一个static文件和一个index.html页面，这个index就是 最后单页面的最终文件</p>',11),p=[r];function c(o,n,h,s,b,u){return a(),e("div",null,p)}const w=t(l,[["render",c]]);export{m as __pageData,w as default};
