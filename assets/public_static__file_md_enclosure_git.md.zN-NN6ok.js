import{_ as a,c as s,o as i,U as t}from"./chunks/framework.zpeVKxWT.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"public/static/_file/md/enclosure/git.md","filePath":"public/static/_file/md/enclosure/git.md"}'),e={name:"public/static/_file/md/enclosure/git.md"},h=t(`<h2 id="git创建新分支" tabindex="-1">git创建新分支 <a class="header-anchor" href="#git创建新分支" aria-label="Permalink to &quot;git创建新分支&quot;">​</a></h2><h3 id="_1-创建本地分支" tabindex="-1">1.创建本地分支 <a class="header-anchor" href="#_1-创建本地分支" aria-label="Permalink to &quot;1.创建本地分支&quot;">​</a></h3><p>git branch 分支名，例如：git branch 2.0.1.20120806 注：2.0.1.20120806是分支名称，可以随便定义。</p><h3 id="_2-切换本地分支" tabindex="-1">2.切换本地分支 <a class="header-anchor" href="#_2-切换本地分支" aria-label="Permalink to &quot;2.切换本地分支&quot;">​</a></h3><p>git checkout 分支名，例如从master切换到分支：git checkout 2.0.1.20120806</p><h3 id="_3-远程分支就是本地分支push到服务器上。比如master就是一个最典型的远程分支-默认-。" tabindex="-1">3.远程分支就是本地分支push到服务器上。比如master就是一个最典型的远程分支（默认）。 <a class="header-anchor" href="#_3-远程分支就是本地分支push到服务器上。比如master就是一个最典型的远程分支-默认-。" aria-label="Permalink to &quot;3.远程分支就是本地分支push到服务器上。比如master就是一个最典型的远程分支（默认）。&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0.1.20120806</span></span></code></pre></div><h3 id="_4-远程分支和本地分支需要区分好-所以-在从服务器上拉取特定分支的时候-需要指定远程分支的名字。" tabindex="-1">4.远程分支和本地分支需要区分好，所以，在从服务器上拉取特定分支的时候，需要指定远程分支的名字。 <a class="header-anchor" href="#_4-远程分支和本地分支需要区分好-所以-在从服务器上拉取特定分支的时候-需要指定远程分支的名字。" aria-label="Permalink to &quot;4.远程分支和本地分支需要区分好，所以，在从服务器上拉取特定分支的时候，需要指定远程分支的名字。&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">track origin/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0.1.20120806</span></span></code></pre></div><p>注意该命令由于带有--track参数，所以要求git1.6.4以上！这样git会自动切换到分支。</p><h3 id="_5-提交分支数据到远程服务器" tabindex="-1">5.提交分支数据到远程服务器 <a class="header-anchor" href="#_5-提交分支数据到远程服务器" aria-label="Permalink to &quot;5.提交分支数据到远程服务器&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">local_branch_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">remote_branch_name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span></span></code></pre></div><p>例如：</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0.1.20120806</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0.1.20120806</span></span></code></pre></div><p>一般当前如果不在该分支时，使用这种方式提交。如果当前在 2.0.1.20120806 分支下，也可以直接提交</p><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push</span></span></code></pre></div><h3 id="_6-删除远程分支" tabindex="-1">6.删除远程分支 <a class="header-anchor" href="#_6-删除远程分支" aria-label="Permalink to &quot;6.删除远程分支&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin :develop</span></span></code></pre></div><hr><h3 id="_1-从已有的分支创建新的分支-如从master分支-创建一个dev分支" tabindex="-1">1,从已有的分支创建新的分支(如从master分支),创建一个dev分支 <a class="header-anchor" href="#_1-从已有的分支创建新的分支-如从master分支-创建一个dev分支" aria-label="Permalink to &quot;1,从已有的分支创建新的分支(如从master分支),创建一个dev分支&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Git checkout </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">b dev</span></span></code></pre></div><h3 id="_2-创建完可以查看一下-分支已经切换到dev" tabindex="-1">2,创建完可以查看一下,分支已经切换到dev <a class="header-anchor" href="#_2-创建完可以查看一下-分支已经切换到dev" aria-label="Permalink to &quot;2,创建完可以查看一下,分支已经切换到dev&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> dev</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    master</span></span></code></pre></div><h3 id="_3-提交该分支到远程仓库" tabindex="-1">3,提交该分支到远程仓库 <a class="header-anchor" href="#_3-提交该分支到远程仓库" aria-label="Permalink to &quot;3,提交该分支到远程仓库&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin dev</span></span></code></pre></div><h3 id="_4-测试从远程获取dev" tabindex="-1">4,测试从远程获取dev <a class="header-anchor" href="#_4-测试从远程获取dev" aria-label="Permalink to &quot;4,测试从远程获取dev&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull origin dev</span></span></code></pre></div><p>或者：</p><p>如果用命令行，运行 git fetch，可以将远程分支信息获取到本地，再运行 git checkout -b local-branchname origin/remote_branchname 就可以将远程分支映射到本地命名为local-branchname 的一分支</p><h3 id="_5-我觉得现在重要的就是设置git-push-pull默认的提交获取分支-这样就很方便的使用git-push-提交信息或git-pull获取信息" tabindex="-1">5,我觉得现在重要的就是设置git push,pull默认的提交获取分支,这样就很方便的使用git push 提交信息或git pull获取信息 <a class="header-anchor" href="#_5-我觉得现在重要的就是设置git-push-pull默认的提交获取分支-这样就很方便的使用git-push-提交信息或git-pull获取信息" aria-label="Permalink to &quot;5,我觉得现在重要的就是设置git push,pull默认的提交获取分支,这样就很方便的使用git push 提交信息或git pull获取信息&quot;">​</a></h3><div class="language-cmd vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">cmd</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git branch </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">--set-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">upstream</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-to=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">origin/dev</span></span></code></pre></div><p>取消对master的跟踪</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>git branch --unset-upstream master</span></span></code></pre></div><h3 id="_6-现在随便修改一下工程文件的内容-然后git-commit-git-push-之后就可以直接提交到远程的dev分支中-而不会是master" tabindex="-1">6,现在随便修改一下工程文件的内容,然后git commit ,git push,之后就可以直接提交到远程的dev分支中,而不会是master <a class="header-anchor" href="#_6-现在随便修改一下工程文件的内容-然后git-commit-git-push-之后就可以直接提交到远程的dev分支中-而不会是master" aria-label="Permalink to &quot;6,现在随便修改一下工程文件的内容,然后git commit ,git push,之后就可以直接提交到远程的dev分支中,而不会是master&quot;">​</a></h3>`,34),l=[h];function n(p,d,c,r,o,g){return i(),s("div",null,l)}const m=a(e,[["render",n]]);export{u as __pageData,m as default};
