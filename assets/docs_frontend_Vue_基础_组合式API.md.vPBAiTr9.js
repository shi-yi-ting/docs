import{_ as a,c as e,o,U as s}from"./chunks/framework.zpeVKxWT.js";const _=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend/Vue/基础/组合式API.md","filePath":"docs/frontend/Vue/基础/组合式API.md"}'),n={name:"docs/frontend/Vue/基础/组合式API.md"},t=s(`<h2 id="组合式api" tabindex="-1">组合式API <a class="header-anchor" href="#组合式api" aria-label="Permalink to &quot;组合式API&quot;">​</a></h2><h3 id="安装依赖" tabindex="-1">安装依赖 <a class="header-anchor" href="#安装依赖" aria-label="Permalink to &quot;安装依赖&quot;">​</a></h3><p><code>npm install @vue/composition-api</code>或<code>yarn add @vue/composition-api</code></p><h3 id="注册" tabindex="-1">注册 <a class="header-anchor" href="#注册" aria-label="Permalink to &quot;注册&quot;">​</a></h3><p>在使用@vue/composition-api前必须通过Vue.use() 进行安装，之后才可使用新的组合式API进行组件开发</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>import Vue from &#39;vue&#39;</span></span>
<span class="line"><span>import VueCompositionApi from &#39;@vue/composition-api&#39;</span></span>
<span class="line"><span>Vue.use(VueCompositionApi)</span></span></code></pre></div><h3 id="使用api" tabindex="-1">使用API <a class="header-anchor" href="#使用api" aria-label="Permalink to &quot;使用API&quot;">​</a></h3><p>当在Vue3.0使用时，只需要简单的将 @vue/composition-api 换成 vue 即可</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>// 导入相关组件</span></span>
<span class="line"><span>import { defineComponent, ref, reactive, computed, watch, onMounted, onBeforeUnmount } from &#39;@vue/composition-api&#39;</span></span></code></pre></div>`,9),i=[t];function p(c,r,d,l,u,h){return o(),e("div",null,i)}const f=a(n,[["render",p]]);export{_ as __pageData,f as default};
